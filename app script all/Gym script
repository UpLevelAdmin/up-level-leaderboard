function doGet(e) {
  var dates = [
    "วันอังคารที่ 2 กันยายน 2568",
    "วันศุกร์ที่ 5 กันยายน 2568",
    "วันเสาร์ที่ 6 กันยายน 2568",
    "วันอังคารที่ 9 กันยายน 2568",
    "วันศุกร์ที่ 12 กันยายน 2568",
    "วันเสาร์ที่ 13 กันยายน 2568",
    "วันอังคารที่ 16 กันยายน 2568",
    "วันศุกร์ที่ 19 กันยายน 2568",
    "วันเสาร์ที่ 20 กันยายน 2568",
    "วันอังคารที่ 23 กันยายน 2568",
    "วันศุกร์ที่ 26 กันยายน 2568",
    "วันเสาร์ที่ 27 กันยายน 2568",
    "วันอังคารที่ 30 กันยายน 2568"
  ];

  var pastelColors = [
    { bg: "#E3F2FD", border: "#42A5F5" },
    { bg: "#FFFDE7", border: "#FDD835" },
    { bg: "#F1F8E9", border: "#7CB342" },
    { bg: "#FCE4EC", border: "#EC407A" },
    { bg: "#E8EAF6", border: "#5C6BC0" },
    { bg: "#FFF3E0", border: "#FFB74D" },
    { bg: "#E0F2F1", border: "#26A69A" }
  ];

  var logoUrl = "https://i.postimg.cc/wjzpnxjB/Up-Level-01-1.png";
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Form Responses 1");
  if (!sheet) {
    if (e && e.parameter && e.parameter.type === "json") {
      return ContentService.createTextOutput(JSON.stringify({error: "❌ ไม่พบชีทข้อมูล"})).setMimeType(ContentService.MimeType.JSON);
    } else {
      return HtmlService.createHtmlOutput("❌ ไม่พบชีทข้อมูล: Form Responses 1");
    }
  }

  var data = sheet.getDataRange().getValues();
  var groupedData = {};
  
  // สร้าง groupedData สำหรับทั้งวันที่ปกติและวันที่ที่มี "*ไม่ได้รับ PROMO GYM*" ต่อท้าย
  dates.forEach(date => {
    groupedData[date] = [];
    // เพิ่มวันที่ที่มี "*ไม่ได้รับ PROMO GYM*" ต่อท้ายสำหรับ 4 วันแรก
    if (date === "วันอังคารที่ 2 กันยายน 2568" || 
        date === "วันศุกร์ที่ 5 กันยายน 2568" || 
        date === "วันเสาร์ที่ 6 กันยายน 2568" || 
        date === "วันอังคารที่ 9 กันยายน 2568") {
      groupedData[date + " *ไม่ได้รับ PROMO GYM*"] = [];
    }
  });

  for (var i = 1; i < data.length; i++) {
    var date = data[i][1];
    var nickname = data[i][3];
    var level = data[i][6];
    var phone = data[i][5];
    
    // ตรวจสอบว่าวันที่นี้ตรงกับวันที่ใดใน groupedData
    if (groupedData[date]) {
      groupedData[date].push({ nickname: nickname, level: level, phone: phone });
    } else {
      // ถ้าไม่เจอ ลองลบ "*ไม่ได้รับ PROMO GYM*" ออกแล้วค้นหา
      var cleanDate = date.replace(/\s*\*ไม่ได้รับ PROMO GYM\*$/, '');
      if (groupedData[cleanDate]) {
        groupedData[cleanDate].push({ nickname: nickname, level: level, phone: phone });
      } else {
        // ถ้ายังไม่เจอ ลองเพิ่ม "*ไม่ได้รับ PROMO GYM*" ต่อท้ายแล้วค้นหา
        var dateWithPromo = cleanDate + " *ไม่ได้รับ PROMO GYM*";
        if (groupedData[dateWithPromo]) {
          groupedData[dateWithPromo].push({ nickname: nickname, level: level, phone: phone });
        }
      }
    }
  }
  
  // Debug: แสดงข้อมูลที่สร้างขึ้น
  console.log("Debug - groupedData keys:", Object.keys(groupedData));
  console.log("Debug - Sample data:", groupedData["วันอังคารที่ 2 กันยายน 2568"]);
  console.log("Debug - Sample data with PROMO:", groupedData["วันอังคารที่ 2 กันยายน 2568 *ไม่ได้รับ PROMO GYM*"]);
  console.log("Debug - วันที่ 5 กันยายน:", groupedData["วันศุกร์ที่ 5 กันยายน 2568"]);
  console.log("Debug - วันที่ 5 กันยายน with PROMO:", groupedData["วันศุกร์ที่ 5 กันยายน 2568 *ไม่ได้รับ PROMO GYM*"]);
  
  // Debug: แสดงข้อมูลดิบจาก Google Sheets
  console.log("Debug - Raw data from sheet:");
  for (var i = 1; i < Math.min(data.length, 10); i++) {
    console.log(`Row ${i}: Date="${data[i][1]}", Nickname="${data[i][3]}"`);
  }
  
  // Debug: ตรวจสอบข้อมูลวันที่ 5 กันยายนโดยเฉพาะ
  console.log("Debug - ตรวจสอบข้อมูลวันที่ 5 กันยายน:");
  for (var i = 1; i < data.length; i++) {
    var date = data[i][1];
    if (date && date.includes("5 กันยายน")) {
      console.log(`Found date 5: "${date}", Nickname: "${data[i][3]}"`);
    }
  }
  
  // Debug: แสดงข้อมูลทั้งหมดใน groupedData
  console.log("Debug - All groupedData:");
  Object.keys(groupedData).forEach(function(key) {
    console.log(`${key}: ${groupedData[key].length} players`);
  });

  if (e && e.parameter && e.parameter.type === "json") {
    // สร้าง groupedData ที่รวมข้อมูลจากทั้งสองแหล่ง
    var finalGroupedData = {};
    dates.forEach(function(date) {
      var players = groupedData[date] || [];
      var playersWithPromo = groupedData[date + " *ไม่ได้รับ PROMO GYM*"] || [];
      finalGroupedData[date] = players.concat(playersWithPromo);
      
      // Debug: แสดงข้อมูลที่รวมแล้ว
      console.log(`Final data for ${date}: ${finalGroupedData[date].length} players`);
    });
    
    return ContentService.createTextOutput(JSON.stringify({dates: dates, groupedData: finalGroupedData})).setMimeType(ContentService.MimeType.JSON);
  }

  var html = `
    <!DOCTYPE html>
    <html lang="th">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>รายชื่อผู้สมัคร Gym Battle กันยายน 2568</title>
      <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;600&display=swap" rel="stylesheet">
      <style>
        body {
          font-family: 'Kanit', sans-serif;
          background: #f9f9f9;
          margin: 0;
          padding: 20px;
        }
        .container {
          max-width: 800px;
          margin: auto;
          background: white;
          padding: 20px;
          border-radius: 10px;
          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        .logo {
          display: flex;
          justify-content: center;
          margin-bottom: 20px;
        }
        .logo img {
          max-width: 150px;
        }
        h2 {
          color: #33691E;
          text-align: center;
        }
        .date-header {
          padding: 10px;
          margin-top: 25px;
          font-size: 1.1em;
          font-weight: bold;
        }
        table {
          width: 100%;
          border-collapse: collapse;
          margin-top: 10px;
        }
        th, td {
          padding: 8px;
          text-align: center;
          border-bottom: 1px solid #ddd;
        }
        tr:hover {
          background: #f1f1f1;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="logo">
          <img src="${logoUrl}" alt="Up Level Logo">
        </div>
        <h2>รายชื่อผู้สมัคร Gym Battle เดือนกันยายน 2568</h2>
  `;

  dates.forEach(function(date, index) {
    // รวมข้อมูลจากทั้งวันที่ปกติและวันที่ที่มี "*ไม่ได้รับ PROMO GYM*" ต่อท้าย
    var players = groupedData[date] || [];
    var playersWithPromo = groupedData[date + " *ไม่ได้รับ PROMO GYM*"] || [];
    
    // รวมข้อมูลทั้งหมด
    var allPlayers = players.concat(playersWithPromo);
    
    var bgColor = pastelColors[index % pastelColors.length].bg;
    var borderColor = pastelColors[index % pastelColors.length].border;

    html += `
      <div class="date-header" style="background-color: ${bgColor}; border-left: 6px solid ${borderColor};">
        วันที่: ${date} (จำนวน ${allPlayers.length} คน)
      </div>
      <table>
        <thead>
          <tr style="background-color: ${borderColor}; color: white;">
            <th>ลำดับ</th>
            <th>ชื่อเล่น</th>
            <th>ระดับการเล่น</th>
          </tr>
        </thead>
        <tbody>
    `;

    if (allPlayers.length === 0) {
      html += `<tr><td colspan="3">ยังไม่มีผู้สมัคร</td></tr>`;
    } else {
      allPlayers.forEach((player, idx) => {
        html += `<tr><td>${idx + 1}</td><td>${player.nickname}</td><td>${player.level}</td></tr>`;
      });
    }
    html += `</tbody></table>`;
  });

  html += `</div></body></html>`;
  return HtmlService.createHtmlOutput(html);
}

// ===== ฟังก์ชันแจ้งเตือน Telegram =====

// แก้ไขข้อมูลเหล่านี้
const BOT_TOKEN = "8284717743:AAGfu8Z-r6SI_TeAslai9vA600nNagjzH5k";
const CHAT_ID = "7384721744"; // Chat ID ของคุณ

const TELEGRAM_API_URL = `https://api.telegram.org/bot${BOT_TOKEN}`;

/**
 * ฟังก์ชันที่ทำงานเมื่อมีการส่งฟอร์ม
 */
function onFormSubmit(e) {
  try {
    // ดึงข้อมูลจากฟอร์ม
    const responses = e.values;
    const timestamp = responses[0];
    const selectedDate = responses[1];
    const nickname = responses[3];
    const phone = responses[5];
    const level = responses[6];
    
    // นับจำนวนคนที่สมัครในวันที่นี้
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Form Responses 1");
    let countForDate = 0;
    
    if (sheet) {
      const data = sheet.getDataRange().getValues();
      for (let i = 1; i < data.length; i++) {
        if (data[i][1] === selectedDate) {
          countForDate++;
        }
      }
    }
    
    // สร้างข้อความแจ้งเตือน
    const message = `🏟️ *มีคนสมัคร Gym Battle ใหม่!*

👤 *ชื่อเล่น:* ${nickname}
📱 *เบอร์โทร:* ${phone}
🎮 *ระดับการเล่น:* ${level}
📅 *วันที่เลือก:* ${selectedDate}
⏰ *เวลาที่สมัคร:* ${timestamp}

📊 *รวมวันที่ ${selectedDate}: ${countForDate} คน*

---
📊 [ตรวจสอบรายชื่อทั้งหมด](https://script.google.com/macros/s/AKfycbzS4XdB83QGZ8K5ZZvmSuzrTAKIOHe_svyQiKuoz3qKqpR0omm81ccBsGHkfzmYkUV3/exec)`;
    
    // ส่งไปยัง Telegram
    const payload = {
      chat_id: CHAT_ID,
      text: message,
      parse_mode: "Markdown",
      disable_web_page_preview: true
    };
    
    UrlFetchApp.fetch(`${TELEGRAM_API_URL}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload)
    });
    
    console.log("✅ ส่งการแจ้งเตือนไปยัง Telegram สำเร็จ");
    
  } catch (error) {
    console.error("❌ เกิดข้อผิดพลาด:", error);
  }
}

/**
 * ฟังก์ชันทดสอบการส่งไปยัง Telegram
 */
function testTelegramNotification() {
  const testData = {
    values: [
      new Date().toLocaleString('th-TH'),
      "วันอังคารที่ 2 กันยายน 2568",
      "",
      "ผู้ทดสอบ",
      "",
      "0812345678",
      "Gold"
    ]
  };
  
  onFormSubmit(testData);
  console.log("🧪 ส่งการทดสอบไปยัง Telegram แล้ว");
}

/**
 * ฟังก์ชันสำหรับหา Chat ID ของคุณ
 * เรียกใช้ฟังก์ชันนี้แล้วส่งข้อความให้บอท จะได้ Chat ID
 */
function getChatId() {
  try {
    const response = UrlFetchApp.fetch(`${TELEGRAM_API_URL}/getUpdates`);
    const data = JSON.parse(response.getContentText());
    
    if (data.ok && data.result.length > 0) {
      const lastMessage = data.result[data.result.length - 1];
      const chatId = lastMessage.message.chat.id;
      const username = lastMessage.message.from.username || lastMessage.message.from.first_name;
      
      console.log(`Chat ID ของ ${username}: ${chatId}`);
      return chatId;
    } else {
      console.log("ไม่พบข้อความใหม่ กรุณาส่งข้อความให้บอทก่อน");
      return null;
    }
  } catch (error) {
    console.error("❌ เกิดข้อผิดพลาดในการหา Chat ID:", error);
    return null;
  }
}

/**
 * ฟังก์ชันสำหรับส่งสรุปรายชื่อผู้สมัครประจำวัน
 */
function sendDailySummary() {
  try {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Form Responses 1");
    if (!sheet) {
      console.log("ไม่พบชีทข้อมูล");
      return;
    }
    
    const data = sheet.getDataRange().getValues();
    const today = new Date();
    const todayStr = today.toLocaleDateString('th-TH');
    
    let todayCount = 0;
    let todayRegistrations = [];
    
    for (let i = 1; i < data.length; i++) {
      const rowDate = new Date(data[i][0]);
      if (rowDate.toLocaleDateString('th-TH') === todayStr) {
        todayCount++;
        todayRegistrations.push({
          nickname: data[i][3],
          phone: data[i][5],
          level: data[i][6],
          selectedDate: data[i][1]
        });
      }
    }
    
    let message = `📊 *สรุปผู้สมัคร Gym Battle ประจำวัน*

📅 *วันที่:* ${todayStr}
👥 *จำนวนผู้สมัคร:* ${todayCount} คน

`;
    
    if (todayRegistrations.length > 0) {
      message += `📋 *รายชื่อผู้สมัคร:*\n`;
      todayRegistrations.forEach((reg, index) => {
        message += `${index + 1}. ${reg.nickname} (${reg.level}) - ${reg.selectedDate}\n`;
      });
    } else {
      message += `📝 ยังไม่มีผู้สมัครวันนี้`;
    }
    
    message += `\n---\n📊 [ตรวจสอบรายชื่อทั้งหมด](https://script.google.com/macros/s/AKfycbzS4XdB83QGZ8K5ZZvmSuzrTAKIOHe_svyQiKuoz3qKqpR0omm81ccBsGHkfzmYkUV3/exec)`;
    
    const payload = {
      chat_id: CHAT_ID,
      text: message,
      parse_mode: "Markdown",
      disable_web_page_preview: true
    };
    
    UrlFetchApp.fetch(`${TELEGRAM_API_URL}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload)
    });
    
    console.log(`✅ ส่งสรุปประจำวันไปยัง Telegram สำเร็จ - ${todayCount} คน`);
    
  } catch (error) {
    console.error("❌ เกิดข้อผิดพลาดในการส่งสรุป:", error);
  }
}

/**
 * ฟังก์ชันทดสอบ API
 */
function testAPI() {
  try {
    var result = doGet({parameter: {type: "json"}});
    console.log("API Test Result:", result.getContent());
  } catch (error) {
    console.error("API Test Error:", error);
  }
}