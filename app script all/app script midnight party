function doGet() {
  try {
    console.log('doGet function called');
    
    // ตรวจสอบว่า spreadsheet มีอยู่หรือไม่
    var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    if (!spreadsheet) {
      console.log('No active spreadsheet found');
      return createResponse({ 
        participants: [],
        error: "No active spreadsheet found"
      });
    }
    
    console.log('Spreadsheet ID:', spreadsheet.getId());
    console.log('Spreadsheet name:', spreadsheet.getName());
    
    // ลองหา sheet ที่มีอยู่
    var sheets = spreadsheet.getSheets();
    console.log('Available sheets:', sheets.map(s => s.getName()));
    
    // ลองหา sheet ที่มีข้อมูล
    var targetSheet = null;
    var sheetNames = ['Form Responses 1', 'Form Responses', 'Responses', 'Sheet1'];
    
    for (var i = 0; i < sheetNames.length; i++) {
      var sheet = spreadsheet.getSheetByName(sheetNames[i]);
      if (sheet) {
        targetSheet = sheet;
        console.log('Found sheet:', sheetNames[i]);
        break;
      }
    }
    
    if (!targetSheet) {
      console.log('No suitable sheet found, using test data');
      // ส่งข้อมูลทดสอบถ้าไม่มี sheet
      return createResponse({
        participants: [
          { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 1', 'เบอร์โทรศัพท์': '0812345678', 'ระดับการเล่น': 'Rookie' },
          { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 2', 'เบอร์โทรศัพท์': '0823456789', 'ระดับการเล่น': 'Bronze' },
          { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 3', 'เบอร์โทรศัพท์': '0834567890', 'ระดับการเล่น': 'Silver' }
        ],
        debug: {
          message: "Using test data - no suitable sheet found",
          availableSheets: sheets.map(s => s.getName())
        }
      });
    }
    
    var data = targetSheet.getDataRange().getValues();
    console.log('Data rows found:', data.length);
    
    if (data.length <= 1) {
      console.log('No data rows found, using test data');
      return createResponse({
        participants: [
          { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 1', 'เบอร์โทรศัพท์': '0812345678', 'ระดับการเล่น': 'Rookie' },
          { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 2', 'เบอร์โทรศัพท์': '0823456789', 'ระดับการเล่น': 'Bronze' },
          { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 3', 'เบอร์โทรศัพท์': '0834567890', 'ระดับการเล่น': 'Silver' }
        ],
        debug: {
          message: "Using test data - no data rows found",
          sheetName: targetSheet.getName()
        }
      });
    }
    
    var headers = data[0];
    console.log('Headers:', headers);
    
    var participants = [];
    
    // สร้างข้อมูลผู้ใช้ในรูปแบบเดียวกับ GBL
    for (var i = 1; i < data.length; i++) {
      var row = data[i];
      var participant = {};
      
      // สร้าง object โดยใช้ชื่อ column เป็น key (เหมือน GBL)
      for (var j = 0; j < headers.length; j++) {
        participant[headers[j]] = row[j] || '';
      }
      
      participants.push(participant);
      console.log('Participant', i, ':', participant);
    }
    
    var result = {
      participants: participants,
      debug: {
        sheetName: targetSheet.getName(),
        headers: headers,
        message: "Data loaded successfully from sheet"
      }
    };
    
    console.log('Final result:', result);
    return createResponse(result);
    
  } catch (error) {
    console.error('Error in doGet:', error);
    // ส่งข้อมูลทดสอบถ้าเกิด error
    return createResponse({
      participants: [
        { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 1', 'เบอร์โทรศัพท์': '0812345678', 'ระดับการเล่น': 'Rookie' },
        { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 2', 'เบอร์โทรศัพท์': '0823456789', 'ระดับการเล่น': 'Bronze' },
        { 'ชื่อ-นามสกุล': 'ทดสอบผู้เล่น 3', 'เบอร์โทรศัพท์': '0834567890', 'ระดับการเล่น': 'Silver' }
      ],
      error: error.toString(),
      debug: {
        message: "Using test data due to error"
      }
    });
  }
}

function createResponse(data) {
  var response = ContentService.createTextOutput(JSON.stringify(data));
  response.setMimeType(ContentService.MimeType.JSON);
  return response;
}

function doPost(e) {
  return doGet();
}

// ฟังก์ชันทดสอบ
function testFunction() {
  console.log('Test function called');
  return 'Test successful';
}
