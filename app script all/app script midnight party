function doGet() {
  try {
    console.log('doGet function called');
    
    // ตรวจสอบว่า spreadsheet มีอยู่หรือไม่
    var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    if (!spreadsheet) {
      console.log('No active spreadsheet found');
      return createResponse({ 
        error: "No active spreadsheet found",
        users: [],
        total: 0,
        totalBoxes: 0,
        totalSpots: 0
      });
    }
    
    console.log('Spreadsheet ID:', spreadsheet.getId());
    console.log('Spreadsheet name:', spreadsheet.getName());
    
    // ลองหา sheet ที่มีอยู่
    var sheets = spreadsheet.getSheets();
    console.log('Available sheets:', sheets.map(s => s.getName()));
    
    // ลองหา sheet ที่มีข้อมูล
    var targetSheet = null;
    var sheetNames = ['Form Responses 1', 'Form Responses', 'Responses', 'Sheet1'];
    
    for (var i = 0; i < sheetNames.length; i++) {
      var sheet = spreadsheet.getSheetByName(sheetNames[i]);
      if (sheet) {
        targetSheet = sheet;
        console.log('Found sheet:', sheetNames[i]);
        break;
      }
    }
    
    if (!targetSheet) {
      console.log('No suitable sheet found');
      return createResponse({ 
        error: "No suitable sheet found. Available sheets: " + sheets.map(s => s.getName()).join(', '),
        users: [],
        total: 0,
        totalBoxes: 0,
        totalSpots: 0
      });
    }
    
    var data = targetSheet.getDataRange().getValues();
    console.log('Data rows found:', data.length);
    
    if (data.length <= 1) {
      console.log('No data rows found');
      return createResponse({ 
        users: [],
        total: 0,
        totalBoxes: 0,
        totalSpots: 0
      });
    }
    
    var headers = data[0];
    console.log('Headers:', headers);
    
    var users = [];
    var totalBoxes = 0;
    var totalSpots = 0;
    
    // หา index ของ columns ที่สำคัญ
    var nameIndex = -1;
    var phoneIndex = -1;
    var boxIndex = -1;
    var spotIndex = -1;
    
    for (var i = 0; i < headers.length; i++) {
      var header = headers[i].toString().toLowerCase();
      console.log('Checking header', i, ':', header);
      
      if (header.includes('ชื่อ') || header.includes('name') || header.includes('nickname')) {
        nameIndex = i;
        console.log('Found name column at index:', i);
      }
      if (header.includes('เบอร์') || header.includes('phone') || header.includes('โทร') || header.includes('tel')) {
        phoneIndex = i;
        console.log('Found phone column at index:', i);
      }
      if (header.includes('box') || header.includes('กล่อง') || header.includes('boxes')) {
        boxIndex = i;
        console.log('Found box column at index:', i);
      }
      if (header.includes('spot') || header.includes('สปอต') || header.includes('spots')) {
        spotIndex = i;
        console.log('Found spot column at index:', i);
      }
    }
    
    console.log('Column indices - name:', nameIndex, 'phone:', phoneIndex, 'box:', boxIndex, 'spot:', spotIndex);
    
    // สร้างข้อมูลผู้ใช้
    for (var i = 1; i < data.length; i++) {
      var row = data[i];
      var user = {
        nickname: nameIndex >= 0 ? (row[nameIndex] || 'ไม่ระบุชื่อ') : 'ไม่ระบุชื่อ',
        phone: phoneIndex >= 0 ? (row[phoneIndex] || '') : '',
        boxes: boxIndex >= 0 ? (parseInt(row[boxIndex]) || 0) : 0,
        spots: spotIndex >= 0 ? (parseInt(row[spotIndex]) || 0) : 0,
        codename: 'ไม่ระบุ'
      };
      
      totalBoxes += user.boxes;
      totalSpots += user.spots;
      users.push(user);
      
      console.log('User', i, ':', user);
    }
    
    var result = {
      users: users,
      total: users.length,
      totalBoxes: totalBoxes,
      totalSpots: totalSpots,
      debug: {
        sheetName: targetSheet.getName(),
        headers: headers,
        columnIndices: { name: nameIndex, phone: phoneIndex, box: boxIndex, spot: spotIndex }
      }
    };
    
    console.log('Final result:', result);
    return createResponse(result);
    
  } catch (error) {
    console.error('Error in doGet:', error);
    return createResponse({ 
      error: error.toString(),
      users: [],
      total: 0,
      totalBoxes: 0,
      totalSpots: 0
    });
  }
}

function createResponse(data) {
  var response = ContentService.createTextOutput(JSON.stringify(data));
  response.setMimeType(ContentService.MimeType.JSON);
  return response;
}

function doPost(e) {
  return doGet();
}

function getCodenameByPhone(phone) {
  try {
    // เปิด Google Sheet ของ codename mapping
    const codenameSheetId = 'YOUR_CODENAME_SHEET_ID'; // ใส่ ID ของ Sheet ที่มี codename mapping
    const sheet = SpreadsheetApp.openById(codenameSheetId);
    const worksheet = sheet.getSheetByName('Sheet1'); // หรือชื่อ sheet ที่มี codename
    
    if (!worksheet) {
      return null;
    }
    
    const data = worksheet.getDataRange().getValues();
    const headers = data[0];
    const rows = data.slice(1);
    
    // หา index ของ columns
    const phoneIndex = headers.indexOf('เบอร์โทรศัพท์'); // ปรับตามชื่อ column ใน sheet ของคุณ
    const codenameIndex = headers.indexOf('Codename'); // ปรับตามชื่อ column ใน sheet ของคุณ
    
    if (phoneIndex === -1 || codenameIndex === -1) {
      return null;
    }
    
    // ค้นหา codename จากเบอร์โทรศัพท์
    for (let row of rows) {
      if (row[phoneIndex] && row[phoneIndex].toString().trim() === phone.trim()) {
        return row[codenameIndex] ? row[codenameIndex].trim() : null;
      }
    }
    
    return null;
    
  } catch (error) {
    console.error('Error getting codename:', error);
    return null;
  }
}
