function doGet() {
  try {
    var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Form Responses 1');
    if (!sheet) {
      var response = ContentService.createTextOutput(JSON.stringify({ 
        error: "Sheet not found",
        users: [],
        total: 0,
        totalBoxes: 0,
        totalSpots: 0
      }));
      response.setMimeType(ContentService.MimeType.JSON);
      return response;
    }
    
    var data = sheet.getDataRange().getValues();
    if (data.length <= 1) {
      var response = ContentService.createTextOutput(JSON.stringify({ 
        users: [],
        total: 0,
        totalBoxes: 0,
        totalSpots: 0
      }));
      response.setMimeType(ContentService.MimeType.JSON);
      return response;
    }
    
    var headers = data[0];
    var users = [];
    var totalBoxes = 0;
    var totalSpots = 0;
    
    // หา index ของ columns ที่สำคัญ
    var nameIndex = -1;
    var phoneIndex = -1;
    var boxIndex = -1;
    var spotIndex = -1;
    
    for (var i = 0; i < headers.length; i++) {
      var header = headers[i].toString().toLowerCase();
      if (header.includes('ชื่อ') || header.includes('name')) nameIndex = i;
      if (header.includes('เบอร์') || header.includes('phone') || header.includes('โทร')) phoneIndex = i;
      if (header.includes('box') || header.includes('กล่อง')) boxIndex = i;
      if (header.includes('spot') || header.includes('สปอต')) spotIndex = i;
    }
    
    for (var i = 1; i < data.length; i++) {
      var row = data[i];
      var user = {
        nickname: nameIndex >= 0 ? (row[nameIndex] || 'ไม่ระบุชื่อ') : 'ไม่ระบุชื่อ',
        phone: phoneIndex >= 0 ? (row[phoneIndex] || '') : '',
        boxes: boxIndex >= 0 ? (parseInt(row[boxIndex]) || 0) : 0,
        spots: spotIndex >= 0 ? (parseInt(row[spotIndex]) || 0) : 0,
        codename: 'ไม่ระบุ' // จะถูกอัปเดตจาก member dashboard
      };
      
      totalBoxes += user.boxes;
      totalSpots += user.spots;
      users.push(user);
    }
    
    // ส่งข้อมูลกลับ
    var response = ContentService.createTextOutput(JSON.stringify({
      users: users,
      total: users.length,
      totalBoxes: totalBoxes,
      totalSpots: totalSpots
    }));
    response.setMimeType(ContentService.MimeType.JSON);
    
    return response;
    
  } catch (error) {
    console.error('Error in doGet:', error);
    var response = ContentService.createTextOutput(JSON.stringify({ 
      error: error.toString(),
      users: [],
      total: 0,
      totalBoxes: 0,
      totalSpots: 0
    }));
    response.setMimeType(ContentService.MimeType.JSON);
    return response;
  }
}

// ใช้ doPost แทน doOptions สำหรับ CORS
function doPost(e) {
  // ส่งข้อมูลกลับเหมือน doGet แต่สำหรับ POST request
  return doGet();
}

function getCodenameByPhone(phone) {
  try {
    // เปิด Google Sheet ของ codename mapping
    const codenameSheetId = 'YOUR_CODENAME_SHEET_ID'; // ใส่ ID ของ Sheet ที่มี codename mapping
    const sheet = SpreadsheetApp.openById(codenameSheetId);
    const worksheet = sheet.getSheetByName('Sheet1'); // หรือชื่อ sheet ที่มี codename
    
    if (!worksheet) {
      return null;
    }
    
    const data = worksheet.getDataRange().getValues();
    const headers = data[0];
    const rows = data.slice(1);
    
    // หา index ของ columns
    const phoneIndex = headers.indexOf('เบอร์โทรศัพท์'); // ปรับตามชื่อ column ใน sheet ของคุณ
    const codenameIndex = headers.indexOf('Codename'); // ปรับตามชื่อ column ใน sheet ของคุณ
    
    if (phoneIndex === -1 || codenameIndex === -1) {
      return null;
    }
    
    // ค้นหา codename จากเบอร์โทรศัพท์
    for (let row of rows) {
      if (row[phoneIndex] && row[phoneIndex].toString().trim() === phone.trim()) {
        return row[codenameIndex] ? row[codenameIndex].trim() : null;
      }
    }
    
    return null;
    
  } catch (error) {
    console.error('Error getting codename:', error);
    return null;
  }
}
